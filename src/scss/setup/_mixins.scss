/* Media queries Breakpoint mixins */

@mixin for-mobile-layout {
	@media (max-width: $break-narrow) {
		@content;
	}
}

@mixin for-narrow-layout {
	@media (max-width: $break-narrow) {
		@content;
	}
}

@mixin for-normal-layout {
	@media (min-width: $break-normal) {
		@content;
	}
}

@mixin for-wide-layout {
	@media (min-width: $break-wide) {
		@content;
	}
}

@mixin layoutGTC($max) {
	grid-template-columns:
		minmax($layoutPadding, 1fr)
		minmax(auto, $max)
		minmax($layoutPadding, 1fr);
}

@mixin mainBtn($bgclr: white, $bgclrHover: $button-hover-clr) {
	background-color: $bgclr;
	border-radius: 4px;
	padding: 4px 8px;
	border: none;
	transition: $trns;
	cursor: pointer;
	&:hover {
		background-color: $bgclrHover;
	}
}

@mixin inlineInput($fontSize: 1em) {
	padding: 0.5rem 0.3rem;
	border-radius: 4px;
	border: 1px solid transparent;
	font-size: $fontSize;
	letter-spacing: -0.2px;
	width: fit-content;
	display: inline-block;

	&:hover {
		border: 1px solid $divider-clr;
	}

	&:focus {
		border: 1px solid $primary-action-clr;
		outline: none;
		width: 100%;
	}
}

@mixin addBtn() {
	border-right: 1px solid $dark-blue;
	background-color: $primary-action-clr;
	color: white;
	border: none;
	transition: $trns;
	padding: 4px 8px;
	cursor: pointer;

	&:hover {
		background-color: $dark-blue;
	}
}

@mixin avatar($size: 30px) {
	width: $size;
	height: $size;
	border-radius: 50%;
	border: 1px solid white;
}

@mixin random-bgc() {
	background-color: rgb(random(100), random(100), random(100));
}
